{"version":3,"sources":["secrets.js","SingleMoviePreview.js","Firebase.js","SingleMovie.js","film.png","App.js","reportWebVitals.js","index.js"],"names":["secrets","apiKey","config","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","SingleMoviePreview","props","movie","title","poster","overview","idx","setSingleMovie","movies","className","onClick","src","width","alt","firebase","initializeApp","ratings","firestore","collection","SingleMovie","setMovie","useState","director","setDirector","likes","setLikes","dislikes","setDislikes","loaded","setLoaded","useEffect","a","searchStr","id","axios","get","data","crew","find","el","job","name","getCredits","doc","then","exists","set","console","log","catch","error","update","type","length","releaseDate","disabled","App","setMovies","searchTerm","setSearchTerm","singleMovie","handleChange","res","results","reduce","accumulator","mov","original_language","push","poster_path","popularity","sort","b","film","href","target","rel","placeholder","value","onChange","e","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAYeA,EAZC,CACZC,OAAQ,mCACRC,OAAQ,CACJD,OAAQ,0CACRE,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,0B,OCiBVC,MAzBjB,SAA4BC,GACxB,MAAkCA,EAAMC,MAAjCC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,SACfC,EAA+BL,EAA/BK,IAAKC,EAA0BN,EAA1BM,eAAgBC,EAAUP,EAAVO,OAC5B,OACE,sBAEEC,UAAU,8BACVC,QAAS,kBAAMH,EAAeC,EAAOF,KAHvC,UAKE,qBACEK,IAAKP,EAAM,8CAA0CA,GAAW,yGAChEQ,MAAM,MACNC,IAAI,eACJJ,UAAU,kBAEZ,sBAAKA,UAAU,sBAAf,UACE,oBACEA,UAAU,eADZ,SAEEN,IACF,mBAAGM,UAAU,kBAAb,SAAgCJ,SAd7BC,I,0BCiBbQ,IAASC,cAAcvB,EAAQE,QAC/B,IACasB,EADFF,IAASG,YACMC,WAAW,UCsGtBC,MAzHf,SAAqBlB,GACjB,IAAOC,EAAmBD,EAAnBC,MAAOkB,EAAYnB,EAAZmB,SACd,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAkDA,OAhDAC,qBAAU,YACQ,uCAAG,kCAAAC,EAAA,6DACXC,EADW,6CACuC9B,EAAM+B,GAD7C,4BACmEzC,EAAQC,OAD3E,wCAEIyC,IAAMC,IAAIH,GAFd,gBAEVI,EAFU,EAEVA,MACDd,EAAWc,EAAKC,KAAKC,MAAK,SAAAC,GAAE,MAAe,aAAXA,EAAGC,SAC3BjB,EAAYD,EAASmB,MAJlB,2CAAH,qDAMhBC,KACC,CAACxC,IAEJ4B,qBAAU,WAEWd,EAAQ2B,IAAR,UAAezC,EAAM+B,KAC7BE,MAAMS,MAAK,SAAAD,GACdA,EAAIE,QACNpB,EAASkB,EAAIP,OAAOZ,OACpBG,EAAYgB,EAAIP,OAAOV,UACvBG,GAAU,IAEVb,EAAQ2B,IAAR,UAAezC,EAAM+B,KACpBa,IAAI,CACHtB,MAAO,EACPE,SAAU,IAEXkB,MAAK,WACJG,QAAQC,IAAI,qBACZnB,GAAU,SAGboB,OAAM,SAAAC,GACPH,QAAQC,IAAI,UAAWE,QAI1B,CAAChD,EAAM+B,KAEVH,qBAAU,WAQJF,GANeZ,EAAQ2B,IAAR,UAAezC,EAAM+B,KAC7BkB,OAAO,CACd3B,MAAOA,EACPE,SAAUA,MAIb,CAACF,EAAOE,EAAUxB,EAAM+B,GAAIL,IAI7B,8BACI,sBAAKK,GAAG,uBAAR,UACE,wBACEmB,KAAK,SACL1C,QAAS,kBAAMU,EAAS,OACxBX,UAAU,wBAHZ,eAKA,qBACEA,UAAU,oBACVE,IAAKT,EAAME,OAAN,8CAAsDF,EAAME,QAAW,yGAC5ES,IAAI,iBAEN,sBAAKoB,GAAG,8BAAR,UACE,oBAAIxB,UAAU,mBAAd,SAAkCP,EAAMC,QACxC,6BAAKmB,EAAS+B,OAAT,sBAAiC/B,GAAa,wBACnD,mBACEb,UAAU,yBADZ,SAEKP,EAAMoD,YAAN,mBACapD,EAAMoD,aAClB,yBAEN,sBAAK7C,UAAU,mBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,wBACE2C,KAAK,SACL1C,QAAS,WACHc,EAAQ,GAAGC,EAASD,EAAM,IAEhC+B,UAAW3B,EACXnB,UAAU,gBANZ,eAQA,uBAAMA,UAAU,cAAhB,0BAAkCe,KAClC,wBACE4B,KAAK,SACL1C,QAAS,kBAAMe,EAASD,EAAM,IAC9B+B,UAAW3B,EACXnB,UAAU,gBAJZ,kBAOF,sBAAKA,UAAU,oBAAf,UACE,wBACE2C,KAAK,SACL1C,QAAS,WACHgB,EAAW,GAAGC,EAAYD,EAAS,IAEzC6B,UAAW3B,EACXnB,UAAU,gBANZ,eAQA,uBAAMA,UAAU,cAAhB,0BAAkCiB,KAClC,wBACE0B,KAAK,SACL1C,QAAS,kBAAMiB,EAAYD,EAAS,IACpC6B,UAAW3B,EACXnB,UAAU,gBAJZ,qBAQJ,mBAAGA,UAAU,sBAAb,SAAqCP,EAAMG,oBCtH1C,MAA0B,iCC4F1BmD,MAnFf,WACE,MAA4BnC,mBAAS,IAArC,mBAAOb,EAAP,KAAeiD,EAAf,KACA,EAAoCpC,mBAAS,IAA7C,mBAAOqC,EAAP,KAAmBC,EAAnB,KACA,EAAsCtC,mBAAS,MAA/C,mBAAOuC,EAAP,KAAoBrD,EAApB,KA8BA,OA1BAuB,qBAAU,WACR,IAAM+B,EAAY,uCAAG,kCAAA9B,EAAA,6DACnBxB,EAAe,MACTyB,EAFa,4DAEoDxC,EAAQC,OAF5D,iCAE2FiE,EAF3F,iCAIExB,IAAMC,IAAIH,GAJZ,gBAIZI,EAJY,EAIZA,MACD0B,EAAM1B,EAAK2B,QAAQC,QAAO,SAACC,EAAaC,GAU5C,MAT8B,OAA1BA,EAAIC,mBACNF,EAAYG,KAAK,CACfnC,GAAIiC,EAAIjC,GACR9B,MAAO+D,EAAI/D,MACXC,OAAQ8D,EAAIG,YACZhE,SAAU6D,EAAI7D,SACdiE,WAAYJ,EAAII,aAGbL,IACN,KACCM,MAAK,SAACxC,EAAEyC,GAAH,OAASA,EAAEF,WAAavC,EAAEuC,cACnCb,EAAUK,GAlBS,2CAAH,qDAoBdJ,EAAWL,OAAQQ,IAClBJ,EAAU,MACd,CAACC,IAIF,sBAAKjD,UAAU,MAAf,UACE,qBAAKwB,GAAG,WAAR,SACE,sBAAKA,GAAG,mBAAR,UACE,sBAAKA,GAAG,YAAR,UACE,qBAAKrB,MAAM,KAAKD,IAAK8D,EAAM5D,IAAI,SAC/B,oBAAIoB,GAAG,YAAP,gCAGJ,mBACEyC,KAAK,kDACLC,OAAO,SACPC,IAAI,sBAHN,SAKE,qBACEjE,IAAI,oEACJE,IAAI,cACJJ,UAAU,sBAKhB,sBACEA,UAAU,YADZ,SAGE,uBACE2C,KAAK,OACL3C,UAAU,iBACVoE,YAAY,mBACZC,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAOrB,EAAcqB,EAAEL,OAAOG,YAG3ClB,EACC,cAAE,EAAF,CACE1D,MAAO0D,EACPxC,SAAUb,IAGZC,EAAOyE,KAAI,SAAC/E,EAAOI,GAAR,OACX,cAAC,EAAD,CACEJ,MAAOA,EACPI,IAAKA,EACLC,eAAgBA,EAChBC,OAAQA,WC1EH0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6832512d.chunk.js","sourcesContent":["const secrets = {\n    apiKey: \"16ff66b6a4fe255819100131f3826554\",\n    config: {\n        apiKey: \"AIzaSyCbIlRaUHjWYWfWseREHjGYQu8sMOQdnu0\",\n        authDomain: \"yearone-takehome.firebaseapp.com\",\n        databaseURL: \"https://yearone-takehome.firebaseio.com\",\n        projectId: \"yearone-takehome\",\n        storageBucket: \"yearone-takehome.appspot.com\",\n        messagingSenderId: \"113496552704405171831\"\n    }\n}\n\nexport default secrets","function SingleMoviePreview(props) {\n    const {title, poster, overview} = props.movie\n    const {idx, setSingleMovie, movies} = props\n    return (\n      <div \n        key={idx} \n        className=\"singleMoviePreviewContainer\" \n        onClick={() => setSingleMovie(movies[idx])}\n      >\n        <img \n          src={poster ? `https://image.tmdb.org/t/p/original/${poster}` : \"https://image.shutterstock.com/image-vector/no-image-available-vector-illustration-260nw-744886198.jpg\"} \n          width='100' \n          alt=\"movie poster\" \n          className=\"posterPreview\" \n        />\n        <div className=\"titleAboutConatiner\" >\n          <h3 \n            className=\"titlePreview\"\n          >{title}</h3>\n          <p className=\"overviewPreview\">{overview}</p>\n        </div>\n      </div>\n    )\n  }\n\n  export default SingleMoviePreview","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/analytics';\n\n// import secrets from './secrets';\n// import serviceAccount from './firebase-token.json'\nimport secrets from './secrets'\n\n// //================Firstore Setup===========================\n\n// const config = {\n//     apiKey: \"AIzaSyCbIlRaUHjWYWfWseREHjGYQu8sMOQdnu0\",\n//     authDomain: \"yearone-takehome.firebaseapp.com\",\n//     databaseURL: \"https://yearone-takehome.firebaseio.com\",\n//     projectId: \"yearone-takehome\",\n//     storageBucket: \"yearone-takehome.appspot.com\",\n//     messagingSenderId: \"113496552704405171831\"\n// }\n\n// // Initialize Firebase\n// console.log(secrets.firebaseConfig)\nfirebase.initializeApp(secrets.config);\nconst db = firebase.firestore()\nexport const ratings = db.collection('movies')\n// firebase.analytics();\n\n// export const db = firebase.firestore();\n\n// export const ratings = db.collection('movies');\n\n// import admin from 'firebase-admin'\n\n\n// admin.initializeApp({\n//     credential: admin.credential.cert(serviceAccount)\n// })","import {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport secrets from './secrets'\nimport {ratings} from './Firebase'\n\nfunction SingleMovie(props) {\n    const {movie, setMovie} = props\n    const [director, setDirector] = useState('')\n    const [likes, setLikes] = useState(0)\n    const [dislikes, setDislikes] = useState(0)\n    const [loaded, setLoaded] = useState(false)\n\n    useEffect(() => {\n      const getCredits = async () => {\n        const searchStr = `https://api.themoviedb.org/3/movie/${movie.id}/credits?api_key=${secrets.apiKey}&append_to_response=credits`\n        const {data} = await axios.get(searchStr)\n        const director = data.crew.find(el => el.job === 'Director')\n        if (director) setDirector(director.name)\n      }\n      getCredits()\n    }, [movie])\n  \n    useEffect(() => {\n      const getRatings = () => {\n        const movieDoc = ratings.doc(`${movie.id}`)\n        movieDoc.get().then(doc => {\n          if (doc.exists) {\n            setLikes(doc.data().likes)\n            setDislikes(doc.data().dislikes)\n            setLoaded(true)\n          } else {\n            ratings.doc(`${movie.id}`)\n            .set({\n              likes: 0,\n              dislikes: 0\n            })\n            .then(() => {\n              console.log('new movie created')\n              setLoaded(true)\n            })\n          }\n        }).catch(error => {\n          console.log('error: ', error)\n        })\n      }\n      getRatings()\n    }, [movie.id])\n\n    useEffect(() => {\n      const updateRatings = () => {\n        const movieDoc = ratings.doc(`${movie.id}`)\n        movieDoc.update({\n          likes: likes,\n          dislikes: dislikes\n        })\n      }\n      if (loaded) updateRatings()\n    }, [likes, dislikes, movie.id, loaded])\n  \n  \n    return (\n      <div>\n          <div id=\"singleMovieContainer\" >\n            <button \n              type=\"button\" \n              onClick={() => setMovie(null)}\n              className=\"exitSingleMovieButton\"\n              >X</button>\n            <img \n              className=\"singleMoviePoster\" \n              src={movie.poster ? `https://image.tmdb.org/t/p/original/${movie.poster}` : \"https://image.shutterstock.com/image-vector/no-image-available-vector-illustration-260nw-744886198.jpg\"} \n              alt=\"movie poster\"\n            />   \n            <div id=\"singleMovieContentContainer\" >\n              <h1 className=\"singleMovieTitle\">{movie.title}</h1>\n              <h3>{director.length ? `Directed by ${director}` : \"Director not listed\"}</h3>\n              <p \n                className=\"singleMovieReleaseYear\" >\n                  {movie.releaseDate ? \n                    `Released ${movie.releaseDate}` : \n                    'Release date unknown'}\n              </p>\n              <div className=\"ratingsContainer\" >\n                <div className=\"feedbackContainer\">\n                  <button \n                    type=\"button\" \n                    onClick={() => {\n                      if (likes > 0) setLikes(likes-1)\n                    }}\n                    disabled={!loaded}\n                    className=\"ratingsButton\"\n                  >-</button>\n                  <span className=\"ratingsSpan\">👍 {likes}</span>\n                  <button \n                    type=\"button\" \n                    onClick={() => setLikes(likes+1)}\n                    disabled={!loaded}\n                    className=\"ratingsButton\"\n                  >+</button>\n                </div>\n                <div className=\"feedbackContainer\" >\n                  <button \n                    type=\"button\" \n                    onClick={() => {\n                      if (dislikes > 0) setDislikes(dislikes-1)\n                    }}\n                    disabled={!loaded}\n                    className=\"ratingsButton\"\n                  >-</button>\n                  <span className=\"ratingsSpan\">👎 {dislikes}</span>\n                  <button \n                    type=\"button\" \n                    onClick={() => setDislikes(dislikes+1)}\n                    disabled={!loaded}\n                    className=\"ratingsButton\"\n                  >+</button>\n                </div>\n              </div>\n              <p className=\"singleMovieOverview\" >{movie.overview}</p>\n              \n              </div>  \n        </div>\n    </div>\n  )\n}\n\nexport default SingleMovie","export default __webpack_public_path__ + \"static/media/film.966fd9bd.png\";","import {useState, useEffect} from 'react'\nimport './App.css';\nimport axios from 'axios'\nimport secrets from './secrets'\nimport SingleMoviePreview from './SingleMoviePreview'\nimport SingleMovie from './SingleMovie'\nimport film from './film.png'\n\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const [singleMovie, setSingleMovie] = useState(null)\n\n\n\n  useEffect(() => {\n    const handleChange = async () => {\n      setSingleMovie(null)\n      const searchStr = `https://api.themoviedb.org/3/search/movie?api_key=${secrets.apiKey}&language=en-US&query=${searchTerm}&include_adult=false`\n  \n      const {data} = await axios.get(searchStr)\n      const res = data.results.reduce((accumulator, mov) => {\n        if (mov.original_language === 'en') {\n          accumulator.push({\n            id: mov.id,\n            title: mov.title,\n            poster: mov.poster_path,\n            overview: mov.overview,\n            popularity: mov.popularity\n        })\n      }\n        return accumulator\n      }, [])\n      res.sort((a,b) => b.popularity - a.popularity)\n      setMovies(res)\n    }\n    if (searchTerm.length) handleChange()\n    else setMovies([])\n  }, [searchTerm])\n\n\n  return (\n    <div className=\"App\">\n      <div id='titleBar'>\n        <div id='titleBarContents'>\n          <div id='titleLogo'>\n            <img width=\"50\" src={film} alt=\"atom\"/>\n            <h3 id=\"titleText\">Movie DB Search</h3>\n\n          </div>\n        <a \n          href=\"https://github.com/PeterCrosta/YearOne_TakeHome\" \n          target='_blank' \n          rel='noopener noreferrer'\n        >\n          <img \n            src='https://www.sferalabs.cc/wp-content/uploads/github-logo-white.png' \n            alt='github logo' \n            className=\"githubIcon\"\n            />\n        </a>\n        </div>\n      </div>\n      <form \n        className=\"searchBar\"\n      >\n        <input \n          type=\"text\"\n          className=\"searchBarInput\" \n          placeholder=\"Enter movie name\" \n          value={searchTerm} \n          onChange={(e) => setSearchTerm(e.target.value)}\n          />\n      </form>\n      {singleMovie ? (\n        < SingleMovie \n          movie={singleMovie}\n          setMovie={setSingleMovie}\n        />\n        ) : (\n        movies.map((movie, idx) => (\n        <SingleMoviePreview\n          movie={movie}\n          idx={idx}\n          setSingleMovie={setSingleMovie}\n          movies={movies}\n       />)))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}